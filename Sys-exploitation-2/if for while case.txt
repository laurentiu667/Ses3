1. Utilisation de nano pour créer un script Bash avec une structure de contrôle if :

bash
Copy code
nano mon_script.sh
Ensuite, vous pouvez éditer le fichier mon_script.sh et y ajouter le code suivant :

La commande test, également connue sous le nom de [ (crochets), est couramment utilisée en Bash pour effectuer des tests de conditions. Vous devriez utiliser test ou [ lorsque vous avez besoin d'évaluer des expressions conditionnelles pour prendre des décisions dans vos scripts Bash. Voici quelques exemples de situations où vous pourriez utiliser test ou [ :

Conditions dans des instructions if et elif : Pour vérifier si une condition est vraie ou fausse avant d'exécuter un bloc de code dans une instruction if ou elif. Par exemple :

bash
Copy code
if [ condition ] ****** au lieu des [] je pourrais faire if test condition ne pas coller les char a coter [comme ca] mais [ comme ca ]
then
    # Code à exécuter si la condition est vraie
fi

bash
Copy code
#!/bin/bash

age=18

if [ $age -ge 18 ]; then
    echo "Vous êtes majeur."
else
    echo "Vous êtes mineur."
fi
Enregistrez le fichier (Ctrl + O), puis quittez nano (Ctrl + X).

2. Utilisation de nano pour créer un script Bash avec une structure de contrôle for :

bash
Copy code
nano mon_script.sh
Ensuite, ajoutez le code suivant au fichier mon_script.sh :

bash
Copy code
#!/bin/bash

for i in {1..5}; do
    echo "Répétition numéro $i"
done
Enregistrez le fichier et quittez nano.

3. Utilisation de nano pour créer un script Bash avec une structure de contrôle while :

bash
Copy code
nano mon_script.sh
Ensuite, ajoutez le code suivant au fichier mon_script.sh :

bash
Copy code
#!/bin/bash

count=1

while [ $count -le 5 ]; do
    echo "Boucle numéro $count"
    ((count++))
done
Enregistrez le fichier et quittez nano.

4. Utilisation de nano pour créer un script Bash avec une structure de contrôle case :

bash
Copy code
nano mon_script.sh
Ensuite, ajoutez le code suivant au fichier mon_script.sh :

bash
Copy code
#!/bin/bash

fruit="pomme"

case $fruit in
    "pomme")
        echo "C'est une pomme."
        ;;
    "banane")
        echo "C'est une banane."
        ;;
    "orange")
        echo "C'est une orange."
        ;;
    *)
        echo "Je ne connais pas ce fruit."
        ;;
esac
Enregistrez le fichier et quittez nano.

Après avoir créé ces scripts, n'oubliez pas de les rendre exécutables en utilisant la commande chmod +x mon_script.sh, puis vous pourrez les exécuter avec ./mon_script.sh.